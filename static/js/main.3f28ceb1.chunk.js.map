{"version":3,"sources":["images/logo.png","components/Navbar/index.js","components/Loader/index.js","services/cryptoApi.js","components/Pages/CryptoCurrencies/index.js","components/LineChart/index.js","components/Pages/CryptoDetails/index.js","services/cryptoNewsApi.js","components/Pages/News/index.js","components/Pages/Exchanges/index.js","components/Pages/HomePage/index.js","App.js","redux/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","ToggleMenu","className","src","Icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","cryptoApiHeaders","BASE_URL","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptos","setCryptos","searchQuery","setSearchQuery","cryptosList","data","isFetching","queryData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","undefined","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","key","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImg","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","App","exact","path","HomePage","color","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3f28ceb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fef9df93.png\";","import { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Icon from \"../../images/logo.png\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(false);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  const ToggleMenu = () => {\n    setActiveMenu(!activeMenu);\n  };\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={Icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">CrypTo</Link>\n        </Typography.Title>\n        <Button className=\"menu-control-container\" onClick={ToggleMenu}>\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />} key={1} onClick={ToggleMenu}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />} key={2} onClick={ToggleMenu}>\n            <Link to=\"/Cryptocurrencies\">Cryptocurencies</Link>\n          </Menu.Item>\n          <Menu.Item\n            icon={<MoneyCollectOutlined />}\n            key={3}\n            onClick={ToggleMenu}\n          >\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />} key={4} onClick={ToggleMenu}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"0e35326649msh3accd1d68413af5p150057jsn132b92210e2c\",\n};\n\nconst BASE_URL = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({\n    BASE_URL,\n  }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`${BASE_URL}/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(`${BASE_URL}/exchanges`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`${BASE_URL}/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`${BASE_URL}/coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React, { useEffect, useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport Loader from \"../../Loader\";\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const [cryptos, setCryptos] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n\n  useEffect(() => {\n    const queryData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    setCryptos(queryData);\n  }, [cryptosList, searchQuery]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Crypto\"\n            onChange={(e) => setSearchQuery(e.target.value)}\n            value={searchQuery}\n          />\n        </div>\n      )}\n      <Row gutter={(32, 32)} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={8} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt={currency.name}\n                  />\n                }\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change : {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart{\" \"}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            Change: {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../../../services/cryptoApi\";\nimport Loader from \"../../Loader\";\nimport LineChart from \"../../LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const [timeperiod, setTimeperiod] = useState(\"7d\");\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timeperiod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = cryptoDetails !== undefined && [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = cryptoDetails !== undefined && [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value\n          statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimeperiod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Stats Info\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n          </Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links?.map((link, key) => (\n            <Row className=\"coin-link\" key={key}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"0e35326649msh3accd1d68413af5p150057jsn132b92210e2c\",\n};\n\nconst BASE_URL = \"https://bing-news-search1.p.rapidapi.com/news\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ BASE_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `${BASE_URL}/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Typography, Select, Avatar } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../../../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\nimport Loader from \"../../Loader\";\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImg =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={25}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) > 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coin, key) => (\n              <Option value={coin.name} key={key}>\n                {coin.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImg}\n                  alt={news.name}\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl || demoImg\n                    }\n                    alt=\"news\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../../../services/cryptoApi\";\nimport Loader from \"../../Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList !== undefined &&\n          exchangesList.map((exchange, key) => (\n            <Col span={24} key={key}>\n              <Collapse>\n                <Panel\n                  key={exchange.id}\n                  showArrow={false}\n                  header={\n                    <Row key={exchange.id}>\n                      <Col span={6}>\n                        <Text>\n                          <strong>{exchange.rank}.</strong>\n                        </Text>\n                        <Avatar\n                          className=\"exchange-image\"\n                          src={exchange.iconUrl}\n                        />\n                        <Text>\n                          <strong>{exchange.name}</strong>\n                        </Text>\n                      </Col>\n                      <Col span={6}>${millify(exchange.volume)}</Col>\n                      <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                      <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                    </Row>\n                  }\n                >\n                  {HTMLReactParser(exchange.description || \"\")}\n                </Panel>\n              </Collapse>\n            </Col>\n          ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../../../services/cryptoApi\";\nimport { Link } from \"react-router-dom\";\nimport Cryptocurrencies from \"../CryptoCurrencies\";\nimport News from \"../News\";\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data } = useGetCryptosQuery(10);\n\n  const globalStats = data?.data?.stats;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total CryptoCurrencies\"\n            value={data !== undefined && millify(globalStats.total)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={data !== undefined && millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={data !== undefined && millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={data !== undefined && millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={data !== undefined && millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 CryptoCurrencies\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/CryptoApp/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/CryptoApp/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import \"./App.css\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  HomePage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/CryptoApp/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/CryptoApp/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/CryptoApp/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/CryptoApp/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/CryptoApp/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title level={5} style={{ color: \"white\" }}>\n            Crypto <br />\n            All Rights Reserver\n          </Typography.Title>\n          <Space>\n            <Link to=\"/CryptoApp/\">HomePage</Link>\n            <Link to=\"/CryptoApp/exchanges\">Exchanges</Link>\n            <Link to=\"/CryptoApp/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}